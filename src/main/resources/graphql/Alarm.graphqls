scalar DateTime
#Alarme
type Alarm{
    id: ID!,
    dateTime: DateTime!,
    action: String!
    ringed: Boolean!
}
type Mutation{
    CreateAlarm(dateTime: DateTime!,action: String!): Alarm
    updateAlarm(id: ID!, dateTime: DateTime, action: String): Alarm
    deleteAlarm(id: ID!): String
}

type Query{
    getAlarm(id: ID!): Alarm
    GetAllAlamrs: [Alarm!]
}
type Subscription {
    alarmTriggered: Alarm
}
enum STATUS{
    PENDING,SEND,CANCELED
}
